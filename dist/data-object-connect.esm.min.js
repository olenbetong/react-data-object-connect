function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}const events=["AllowDeleteChanged","AllowUpdateChanged","AllowInsertChanged","SaveFailed","PartialDataLoaded","DataLoadFailed","FieldChanged","RecordCreated","RecordRefreshed","RecordDeleting","RecordDeleted","AfterSave","BeforeLoad","BeforeSave","CancelEdit","CurrentIndexChanged","DataLoaded","DirtyChanged"],dataObjectConnect=function(a,b=!1){return function(c){const d=class extends React.Component{constructor(c){super(c),_defineProperty(this,"updateData",(c={})=>{if(b){const b=a.currentRow();this.setState(Object.assign(b,c))}else{const b=a.getData(),d=a.currentRow();this.setState(Object.assign({current:d,data:b},c))}}),_defineProperty(this,"handleAllowDeleteChanged",a=>this.setState({canDelete:a})),_defineProperty(this,"handleAllowUpdateChanged",a=>this.setState({canUpdate:a})),_defineProperty(this,"handleAllowInsertChanged",a=>this.setState({canInsert:a})),_defineProperty(this,"handleSaveFailed",()=>this.setState({saveFailed:!0})),_defineProperty(this,"handlePartialDataLoaded",()=>null),_defineProperty(this,"handleDataLoadFailed",a=>{a?this.setState({isLoading:!1,loadError:a}):this.setState({isLoading:!1})}),_defineProperty(this,"handleFieldChanged",this.updateData),_defineProperty(this,"handleRecordCreated",this.updateData),_defineProperty(this,"handleRecordRefreshed",this.updateData),_defineProperty(this,"handleRecordDeleting",()=>this.setState({isDeleting:!0})),_defineProperty(this,"handleRecordDeleted",()=>this.updateData({isDeleting:!1})),_defineProperty(this,"handleAfterSave",()=>this.updateData({isSaving:!1})),_defineProperty(this,"handleBeforeLoad",()=>this.setState({isLoading:!0})),_defineProperty(this,"handleBeforeSave",()=>this.setState({isSaving:!0,saveFailed:!1})),_defineProperty(this,"handleCancelEdit",()=>this.updateData({isSaving:!1})),_defineProperty(this,"handleCurrentIndexChanged",a=>{b?this.updateData():(this.updateData(),this.setState({currentIndex:a}))}),_defineProperty(this,"handleDataLoaded",()=>this.updateData({isLoading:!1,isSaving:!1,isDeleting:!1,saveFailed:!1})),_defineProperty(this,"handleDirtyChanged",()=>this.setState({isDirty:a.isDirty()})),_defineProperty(this,"setFieldValue",(b,c)=>{a.currentRow(b,c),this.updateData()}),_defineProperty(this,"setFieldValues",b=>{for(let c in b)b.hasOwnProperty(c)&&a.currentRow(c,b[c]);this.updateData()});const d={};if(b)for(let b of a.getFields())d[b.name]=null;else d.data=[];this.state=Object.assign({canDelete:a.isDeleteAllowed(),canUpdate:a.isUpdateAllowed(),canInsert:a.isInsertAllowed(),currentIndex:a.getCurrentIndex(),isDirty:a.isDirty(),isDeleting:!1,isLoading:!1,isSaving:!1,loadError:null,saveFailed:!1},d)}componentDidMount(){for(let b of events)a.attachEvent("on"+b,this["handle"+b]);this.updateData()}componentWillUnmount(){for(let b of events)a.detachEvent("on"+b,this["handle"+b])}cancelEdit(){a.cancelEdit()}deleteRow(c){return new Promise(d=>{const e=(a,b)=>{d({data:b,error:a})};b?a.deleteCurrentRow(e):a.deleteRow(c,e)})}endEdit(b){return new Promise(c=>{a.endEdit((a,d)=>{"function"==typeof b&&b(a,d),c({data:d,error:a})})})}refreshData(b){return new Promise(c=>{a.refreshDataSource((a,d)=>{"function"==typeof b&&b(a,d),c({data:d,error:a})})})}refreshRow(b){return new Promise(c=>{a.refreshCurrentRow((a,d)=>{"function"==typeof b&&b(a,d),c({data:d,error:a})})})}setCurrentIndex(b){a.setCurrentIndex(b)}setParameter(...b){a.setParameter(...b)}render(){return React.createElement(c,_extends({},this.state,{onCancelEdit:this.cancelEdit,onCurrentIndexChange:this.setCurrentIndex,onDeleteRow:this.deleteRow,onEndEdit:this.endEdit,onFieldChange:this.setFieldValue,onFieldsChange:this.setFieldValues,onRefreshData:this.refreshData,onRefreshRow:this.refreshRow,onSetParameter:this.setParameter},this.props))}};return d.displayName=`${a.getDataSourceId()}(${function(){return c.displayName||c.name||"Component"}()})`,d}};dataObjectConnect.properties=["onCancelEdit","onCurrentIndexChange","onEndEdit","onDeleteRow","onFieldChange","onFieldsChange","onRefreshData","onRefreshRow","onSetParameter","canDelete","canUpdate","canInsert","currentIndex","isDirty","isDeleting","isLoading","isSaving","loadError","saveFailed"];export default dataObjectConnect;
